"use strict";

// Tiles.
const tiles = {
	map: undefined,
	tileSize: 8,

	load: () => {
		let img = new Image();
		img.onload = () => {
			tiles.map = img;
		};
		img.src = "./data/images/tilemap.png";
	},

	err: {
		solid: false,

		pos: {
			x: 0,
			y: 2,
		},

		id: 0,
	},

	ground_1: {
		solid: false,

		pos: {
			x: 0,
			y: 0,
		},

		id: 1,
	},
	ground_2: {
		solid: false,

		pos: {
			x: 0,
			y: 0,
		},

		id: 2,
	},

	// WALLS
	wall: {
		solid: true,

		pos: {
			x: 0,
			y: 1,
		},

		id: 3,
	},
	wall_ledge: {
		solid: true,

		pos: {
			x: 1,
			y: 1,
		},

		id: 4,
	},

	door_closed: {
		solid: true,

		pos: { x: 2, y: 0 },

		id: 6,
	},

	door_open: {
		solid: false,

		pos: { x: 3, y: 0 },

		id: 7,
	},
};
// Load the tilemap texture image if it hasn't been already.
tiles.load();

// Room templates.
const rooms = {
	a: [
		[3, 4, 4, 4, 4, 6, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 6, 3, 3, 3, 3, 3],
	],

	ae: [
		[3, 4, 4, 4, 4, 1, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 3],
	],

	u: [
		[3, 4, 4, 4, 4, 6, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
	],

	d: [
		[3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 6, 3, 3, 3, 3, 3],
	],

	l: [
		[3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
	],

	r: [
		[3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
	],

	ud: [
		[3, 4, 4, 4, 4, 6, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 6, 3, 3, 3, 3, 3],
	],

	lr: [
		[3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
	],

	ul: [
		[3, 4, 4, 4, 4, 6, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
	],

	ur: [
		[3, 4, 4, 4, 4, 6, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
	],

	dl: [
		[3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 6, 3, 3, 3, 3, 3],
	],

	dr: [
		[3, 4, 4, 4, 4, 6, 4, 4, 4, 4, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
		[3, 3, 3, 3, 3, 6, 3, 3, 3, 3, 3],
	],

	// hall_ud: [
	// 	[3, 1, 1, 1, 3],
	// 	[3, 1, 1, 1, 3],
	// 	[3, 1, 1, 1, 3],
	// 	[3, 1, 1, 1, 3],
	// 	[3, 1, 1, 1, 3],
	// 	[3, 1, 1, 1, 3],
	// 	[3, 1, 1, 1, 3],
	// 	[3, 1, 1, 1, 3],
	// 	[3, 1, 1, 1, 3],
	// 	[3, 1, 1, 1, 3],
	// ],

	// hall_lr: [
	// 	[4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
	// 	[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
	// 	[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
	// 	[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
	// 	[3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
	// ],
};
